"""change in product table

Revision ID: 3f2df1dc13a4
Revises: 74e34923cb54
Create Date: 2024-07-01 14:24:26.563459

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3f2df1dc13a4'
down_revision: Union[str, None] = '74e34923cb54'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('carts', 'price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=10, asdecimal=2),
               existing_nullable=False)
    op.alter_column('carts', 'total_price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=10, asdecimal=2),
               existing_nullable=False)
    op.drop_constraint('carts_user_id_fkey', 'carts', type_='foreignkey')
    op.drop_column('carts', 'user_id')
    op.alter_column('order', 'unit_price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=10, asdecimal=2),
               existing_nullable=False)
    op.alter_column('payments', 'amount',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=10, asdecimal=3),
               existing_nullable=False)
    op.add_column('products', sa.Column('quantity', sa.Integer(), nullable=True))
    op.alter_column('products', 'product_price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=10, asdecimal=2),
               existing_nullable=False)
    op.alter_column('products', 'discount_percent',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=5, asdecimal=2),
               existing_nullable=False)
    op.alter_column('products', 'discount_price',
               existing_type=sa.REAL(),
               type_=sa.Float(precision=10, asdecimal=2),
               existing_nullable=False)
    op.drop_column('products', 'stock_quantity')
    op.create_foreign_key(None, 'reviews', 'user', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'reviews', type_='foreignkey')
    op.add_column('products', sa.Column('stock_quantity', sa.INTEGER(), autoincrement=False, nullable=True))
    op.alter_column('products', 'discount_price',
               existing_type=sa.Float(precision=10, asdecimal=2),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('products', 'discount_percent',
               existing_type=sa.Float(precision=5, asdecimal=2),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('products', 'product_price',
               existing_type=sa.Float(precision=10, asdecimal=2),
               type_=sa.REAL(),
               existing_nullable=False)
    op.drop_column('products', 'quantity')
    op.alter_column('payments', 'amount',
               existing_type=sa.Float(precision=10, asdecimal=3),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('order', 'unit_price',
               existing_type=sa.Float(precision=10, asdecimal=2),
               type_=sa.REAL(),
               existing_nullable=False)
    op.add_column('carts', sa.Column('user_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.create_foreign_key('carts_user_id_fkey', 'carts', 'user', ['user_id'], ['id'])
    op.alter_column('carts', 'total_price',
               existing_type=sa.Float(precision=10, asdecimal=2),
               type_=sa.REAL(),
               existing_nullable=False)
    op.alter_column('carts', 'price',
               existing_type=sa.Float(precision=10, asdecimal=2),
               type_=sa.REAL(),
               existing_nullable=False)
    # ### end Alembic commands ###
